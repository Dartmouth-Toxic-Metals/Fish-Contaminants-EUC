map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

upstream myApp {
  hash $remote_addr;
  server 127.0.0.1:8080;
  server 127.0.0.1:8081;
  server 127.0.0.1:8082;
}

upstream dev {
  hash $remote_addr;
  server 127.0.0.1:8085;
  server 127.0.0.1:8086;
}

server {
	listen 443 ssl http2;
	listen [::]:443 ssl http2;
    ssl_certificate /root/key.cer;
    ssl_certificate_key /root/cert.pem;
	ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
 	ssl_prefer_server_ciphers on;
    ssl_ciphers EECDH+CHACHA20:EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:EECDH+3DES:RSA+3DES:!MD5;
	ssl on;
	server_name www.qcrit.org;
	location / {
		proxy_pass http://myApp;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade; # allow websockets
        proxy_set_header Connection $connection_upgrade;
        proxy_set_header X-Forwarded-For $remote_addr; # preserve client IP
        proxy_set_header Host $host;
	}
}

server {
    	listen 80;
 	listen [::]:80;
 	server_name qcrit.org;
 	return 301 https://www.qcrit.org$request_uri;
}

server {
    listen 443;
    server_name qcrit.org;

    return 301 https://www.qcrit.org$request_uri;
}

server {
	listen 80;
	listen [::]:80;
	server_name dev.qcrit.org;
	location / {
	    proxy_pass http://dev;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade; # allow websockets
        proxy_set_header Connection $connection_upgrade;
        proxy_set_header X-Forwarded-For $remote_addr; # preserve client IP
        proxy_set_header Host $host;
	}
}
